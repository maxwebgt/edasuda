version: '3'

networks:
  monitoring:
    driver: bridge

services:
  mongo:
    image: mongo:latest
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - ./mongo_data:/data/db
      - ./logs:/var/log/mongodb
    command: >
      mongod
      --logpath /var/log/mongodb/mongod.log
      --logappend
      --quiet
      --bind_ip_all
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - monitoring

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    networks:
      - monitoring

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api_app
    environment:
      - MONGO_URI=${MONGO_URI}
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app:cached
      - /app/node_modules
    depends_on:
      - mongo
    networks:
      - monitoring

  mongodb_exporter:
    image: bitnami/mongodb-exporter:latest
    container_name: mongodb_exporter
    command:
      - '--web.listen-address=:9216'
      - '--collect-all'
    environment:
      - MONGODB_URI=${MONGODB_URI}/admin?directConnection=true
    ports:
      - "9216:9216"
    networks:
      - monitoring
    depends_on:
      - mongo
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:9216/metrics" ]
      interval: 30s
      timeout: 10s
      retries: 3

  tg_bot:
    build:
      context: ./tg_bot
      dockerfile: Dockerfile
    container_name: tg_bot_app
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    ports:
      - "5001:5001"
    volumes:
      - ./tg_bot:/app
      - /app/node_modules
    depends_on:
      - mongo
      - api
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--log.level=debug'
    ports:
      - "9090:9090"
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SESSION_PROVIDER=memory
      - GF_PROVISIONING_DATASOURCES_DEFAULT_UID=prometheus
    ports:
      - "3000:3000"
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus
    user: "472" # Fix permissions issues

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    volumes:
      - ./loki:/etc/loki
      - loki_data:/loki
      - ./wal:/loki/wal
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yml -config.expand-env=true
    networks:
      - monitoring
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail:/etc/promtail
      - /var/log:/var/log
      - ./logs:/var/log/mongodb:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - monitoring
    restart: unless-stopped
    user: root

volumes:
  mongo_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  wal:
    driver: local